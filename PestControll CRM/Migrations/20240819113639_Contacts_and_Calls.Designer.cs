// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PestControll_CRM.Data;

#nullable disable

namespace PestControll_CRM.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240819113639_Contacts_and_Calls")]
    partial class Contacts_and_Calls
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("PestControll_CRM.Data.Entity.Call", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int?>("call_result_type")
                        .HasColumnType("int")
                        .HasColumnName("call_result_type_id");

                    b.Property<int?>("call_type")
                        .HasColumnType("int")
                        .HasColumnName("call_type_id");

                    b.Property<string>("comment")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("comment");

                    b.Property<int?>("contact_id")
                        .HasColumnType("int")
                        .HasColumnName("contact_id");

                    b.Property<DateTime>("date_time")
                        .HasColumnType("datetime")
                        .HasColumnName("date_time");

                    b.HasKey("Id");

                    b.HasIndex("call_result_type");

                    b.HasIndex("call_type");

                    b.HasIndex("contact_id");

                    b.ToTable("Calls");
                });

            modelBuilder.Entity("PestControll_CRM.Data.Entity.CallResultType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(30)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("CallResultTypes");
                });

            modelBuilder.Entity("PestControll_CRM.Data.Entity.CallType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(30)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("CallTypes");
                });

            modelBuilder.Entity("PestControll_CRM.Data.Entity.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(40)")
                        .HasColumnName("email");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("notes");

                    b.Property<string>("PIB")
                        .IsRequired()
                        .HasColumnType("varchar(60)")
                        .HasColumnName("pib");

                    b.Property<int?>("contactstatus_id")
                        .HasColumnType("int")
                        .HasColumnName("contactstatus_id");

                    b.HasKey("Id");

                    b.HasIndex("contactstatus_id");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("PestControll_CRM.Data.Entity.ContactStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("StatusColor")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasColumnName("StatusColor");

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("StatusName");

                    b.HasKey("Id");

                    b.ToTable("ContactStatus");
                });

            modelBuilder.Entity("PestControll_CRM.Data.Entity.PhoneNumber", b =>
                {
                    b.Property<string>("phone_number")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("phone_number");

                    b.Property<int?>("contact_id")
                        .HasColumnType("int")
                        .HasColumnName("contact_id");

                    b.HasKey("phone_number");

                    b.HasIndex("contact_id");

                    b.ToTable("PhoneNumber");
                });

            modelBuilder.Entity("PestControll_CRM.Data.Entity.PlannedCall", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int?>("contact_id")
                        .HasColumnType("int")
                        .HasColumnName("contact_id");

                    b.Property<DateOnly>("date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<string>("goal")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("goal");

                    b.Property<TimeOnly?>("time")
                        .HasColumnType("time")
                        .HasColumnName("time");

                    b.HasKey("Id");

                    b.HasIndex("contact_id");

                    b.ToTable("PlannedCalls");
                });

            modelBuilder.Entity("PestControll_CRM.Data.Entity.Call", b =>
                {
                    b.HasOne("PestControll_CRM.Data.Entity.CallResultType", "callResultType")
                        .WithMany()
                        .HasForeignKey("call_result_type");

                    b.HasOne("PestControll_CRM.Data.Entity.CallType", "callType")
                        .WithMany()
                        .HasForeignKey("call_type");

                    b.HasOne("PestControll_CRM.Data.Entity.Contact", "contact")
                        .WithMany()
                        .HasForeignKey("contact_id");

                    b.Navigation("callResultType");

                    b.Navigation("callType");

                    b.Navigation("contact");
                });

            modelBuilder.Entity("PestControll_CRM.Data.Entity.Contact", b =>
                {
                    b.HasOne("PestControll_CRM.Data.Entity.ContactStatus", "Status")
                        .WithMany()
                        .HasForeignKey("contactstatus_id");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("PestControll_CRM.Data.Entity.PhoneNumber", b =>
                {
                    b.HasOne("PestControll_CRM.Data.Entity.Contact", "Contact")
                        .WithMany("PhoneNumbers")
                        .HasForeignKey("contact_id");

                    b.Navigation("Contact");
                });

            modelBuilder.Entity("PestControll_CRM.Data.Entity.PlannedCall", b =>
                {
                    b.HasOne("PestControll_CRM.Data.Entity.Contact", "contact")
                        .WithMany()
                        .HasForeignKey("contact_id");

                    b.Navigation("contact");
                });

            modelBuilder.Entity("PestControll_CRM.Data.Entity.Contact", b =>
                {
                    b.Navigation("PhoneNumbers");
                });
#pragma warning restore 612, 618
        }
    }
}
